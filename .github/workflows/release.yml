name: Release

on:
  push:
    branches:
      - 'release-*'

env:
  CARGO_TERM_COLOR: always

jobs:
  next-release:
    runs-on: ubuntu-latest

    outputs:
      tag: ${{ steps.run-script.outputs.tag }}
      upload-url: ${{ steps.run-script.outputs.upload-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install deps
        working-directory: ./scripts/releases
        run: npm ci

      - name: Run
        id: run-script
        working-directory: ./scripts/releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm x create-next && cat out.txt >> "$GITHUB_OUTPUT"

  build-upload-assets:
    name: Release - ${{ matrix.platform.target }}

    needs: next-release

    strategy:
      matrix:
        platform:
          - name: linux-gnu
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu

          - name: linux-musl
            os: ubuntu-20.04
            target: x86_64-unknown-linux-musl

          - name: mac-intel
            os: macos-11.0
            target: x86_64-apple-darwin

          - name: mac-apple-silicon
            os: macos-11.0
            target: aarch64-apple-darwin

    runs-on: ${{ matrix.platform.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Install target ${{ matrix.platform.target }}
        run: rustup target add ${{ matrix.platform.target }}

      - name: Installing deps
        run: |
          if [ "${{ matrix.platform.target }}" == "x86_64-unknown-linux-musl" ]; then
            sudo apt-get install musl-tools
          fi

      - name: Build app for ${{ matrix.platform.name }}
        run: cargo build --release --target ${{ matrix.platform.target }}

      - name: Compress bin for ${{ matrix.platform.name }}
        uses: vimtor/action-zip@v1.1
        with:
          files: ./target/${{ matrix.platform.target }}/release/maestro
          dest: ./maestro-${{ matrix.platform.name }}.zip
    
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.next-release.outputs.upload-url }}
          asset_path: ./maestro-${{ matrix.platform.name }}.zip
          asset_name: maestro-${{ matrix.platform.name }}.zip
          asset_content_type: application/zip
